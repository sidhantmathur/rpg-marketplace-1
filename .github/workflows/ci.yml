name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Run ESLint
        run: npm run lint -- --max-warnings=9999
      - name: Run TypeScript check
        run: npm run type-check
      - name: Run Prettier check
        run: npm run format:check

  # test:
  #   needs: lint
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-node@v4
  #       with:
  #         node-version: "20"
  #         cache: "npm"
  #     - name: Install dependencies
  #       run: npm ci
  #     - name: Run unit tests
  #       run: npm run test:unit
  #       env:
  #         CI: true
  #     - name: Run integration tests
  #       run: npm run test:integration
  #       env:
  #         CI: true
  #     - name: Run E2E tests
  #       run: npm run test:e2e
  #       env:
  #         CI: true
  #     - name: Upload test coverage
  #       uses: codecov/codecov-action@v4
  #       with:
  #         token: ${{ secrets.CODECOV_TOKEN }}
  #         files: ./coverage/lcov.info
  #         flags: unittests
  #         name: codecov-umbrella
  #         fail_ci_if_error: true

  build:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Build application
        run: npm run build
      - name: Run bundle analysis
        run: npm run analyze

  deploy:
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./
          vercel-args: "--prod"
